<%= accordion('dataset-metadata') do |accordion| %>
  <% unless dataset.metadata[:tax].nil? %>
    <%= accordion_card(accordion, 'taxonomy', 'Taxonomy') do %>
      <ul class="taxonomy">
        <% tax = dataset.metadata[:tax].sorted_ranks.map { |r| r.join(': ') } %>
        <% tax.each do |r| %>
          <% r = r.split(': ') %>
          <li>
            <span class=text-muted><%= r[0] %>:</span>
            <% if r[1] =~ /^(Candidatus) (.*)/ %>
              <i><%= $1 %></i> <%= $2 %>
            <% else %>
              <i><%= r[1] %></i>
            <% end %>
          </li>
        <% end %>
      </ul>
      <% if dataset.metadata[:tax].namespace %>
        <% ns = dataset.metadata[:tax].namespace %>
        <div class="text-muted text-right">
          (Taxonomic scheme:
          <b><%= ns == 'seqcode' ? 'SeqCode' : ns.upcase %></b>)
          <%= info_msg('Taxonomic schemes in MiGA') do %>
            MiGA is taxonomy-agnostic, which means that the same tools and
            techniques can be applied to different reference taxonomies.
            However, it is important to maintain a standardized scheme for
            a given database if we want to leverage that database on
            classification. For that reason, MiGA implements a top-level
            taxonomic rank called <i>namespace</i>, which tells us the taxonomic
            scheme being followed. Some common schemes include:
            <ul>
              <li>
                <b>SeqCode</b>: Following the reference taxonomy reported by
                <a href='https://seqco.de/seqcode' target=_blank><i>The Code of
                Nomenclature of Prokaryotes Described from Sequence Data</i></a>
                (SeqCode). This taxonomy should be fully compatible with
                <b>NCBI</b>, but may not be compatible with some specific nodes
                of <b>GTDB</b>.
              </li>
              <li>
                <b>NCBI</b>: Following the taxonomy curated and maintained by
                <a href='https://ncbi.nlm.nih.gov/taxonomy' target=_blank>NCBI
                Taxonomy</a>. This taxonomy mostly follows the recommendation of
                <i>The International Code of Nomenclature of Prokaryotes</i>
                (ICNP), and should be fully compatible with <b>SeqCode</b>.
              </li>
              <li>
                <b>GTDB</b>: Following the taxonomy curated and mainteined by
                the <a href='https://gtdb.ecogenomic.org/' target=_blank>Genome
                Taxonomy Data Base</a>. This taxonomy introduces a complete
                taxonomic tree from species to phylum, but it includes some
                temporary alpha-numeric identifiers that don't follow binomial
                nomenclature as recognized by either ICNP or SeqCode. Therefore,
                it can be incompatible with <b>SeqCode</b> and <b>NCBI</b>, but
                it offers non-missingness as well as largely standardized ranks
                on the basis of Relative Evolutionary Distances.
              </li>
            </ul>
            For additional information, please see the links above and the
            associated publications.
          <% end %>
        </div>
      <% end %>
    <% end %>
  <% end %>

  <% if dataset.metadata[:warn] %>
    <p class='alert alert-danger'>
      <%= dataset.metadata[:warn] %>
    </p>
  <% end %>

  <% dataset.metadata.each do |k,v| %>
    <%
      skip = %i[
        ref created updated user tax
        quality is_type is_ref_type type_rel status warn
        run_mytaxa_scan db_project
      ]
    %>
    <% next if skip.include?(k) %>
    <% next if k.to_s[0] == '_' %>
    <% k_str = k.to_s.unmiga_name.capitalize %>
    <%
      ext_links = {
        ncbi_tax_id: ['NCBI TaxID',
          'http://www.uniprot.org/taxonomy/%s', '%s'],
        ncbi_nuccore: ['NCBI Nucleotide',
          'https://www.ncbi.nlm.nih.gov/nuccore/%s', '%s'],
        ncbi_asm: ['NCBI Assembly',
          'https://www.ncbi.nlm.nih.gov/assembly/%s', '%s'],
        ebi_ena: ['EBI ENA',
          'https://www.ebi.ac.uk/ena/data/view/%s', '%s'],
        ebi_embl: ['EBI EMBL',
          'https://www.ebi.ac.uk/embl/data/view/%s', '%s'],
        web_assembly: ['Download',
          '%s', 'Assembly'],
        web_assembly_gz: ['Download',
          '%s', 'Assembly (gz)'],
        dprotologue: ['Digital Protologue Database',
          'http://imedea.uib-csic.es/dprotologue/getPdfTX.php?taxonumber=%s',
          '%s']
      }
      case k
      when :type
        v = "<b>#{v.capitalize}</b>: " \
              "#{MiGA::Dataset.KNOWN_TYPES[v][:description]}"
      when :comments
        if /(.*)Assembly: (\S+)(.*)/.match(v)
          v = "#{$1}<a href='https://www.ncbi.nlm.nih.gov/assembly/#{$2}/' " +
                "target=_blank>Assembly: #{$2}</a>#{$3}"
        end
      when *ext_links.keys
        k_str = ext_links[k][0]
        v = v.split(/[,;]/).map do |i|
          "<a href='#{ext_links[k][1] % i}' target=_blank>#{ext_links[k][2] % i}</a>"
        end.join(", ")
      when :see_also
        k_str = 'See also'
        v = v.split(/[,;]/).map do |i|
          l = i.split(/:/, 2)
          "<a href='#{l[1]}' target=_blank>#{l[0]}</a>"
        end.join(', ')
      end
    %>
    <%= accordion_card(accordion, k, k_str) do %>
      <%= display_data(v, true) %>
    <% end %>
  <% end %>
  
  <% method = project.miga.nil? ? nil :
              project.miga.is_clade? ? :subclades : :clade_finding %>
  <% unless method.nil? || (clade_r = dataset.project.result(method)).nil? %>
    <% unless (clade_f = clade_r.file_path(:class_table)).nil? %>
      <% File.open(clade_f, 'r') do |fh| %>
        <% clade = (fh.each_line.
              grep(/^#{dataset.name}\t/).first || '').chomp.split("\t") %>
        <% unless clade.nil? or clade.empty? %>
          <% metric = project.miga.is_clade? ? 'ANI' : 'AAI' %>
          <%= accordion_card(accordion, 'classification',
                "#{metric} classification" ) do %>
            <ul class='taxonomy'>
            <% cmp = "" %>
            <% clade.each_index do |i| %>
              <% next if i == 0 or clade[i] == '0' %>
              <% cmp += "#{clade[i]}" %>
              <li>
                <span class=text-muted><%= i %>:</span>
                <%= link_to cmp, medoid_clade_url(project.id, metric, cmp) %>
              </li>
              <% cmp += "-" %>
            <% end %>
            </ul>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <% unless method == :subclades or
          (ani_clade_f = clade_r.file_path(:clades_ani95)).nil? %>
      <% unless (ani_clade = File.foreach(ani_clade_f).
            map  { |i| i.chomp.split(',') }.
            find { |i| i.include? dataset.name }).nil? %>
        <%= accordion_card(accordion, 'ani_clade', 'ANI clade') do %>
          <ul style='list-style: circle;'>
            <% ani_clade.each do |i| %>
              <li><%= link_to_reference_dataset(project, i) %></li>
            <% end %>
          </ul>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end # Accordion %>

